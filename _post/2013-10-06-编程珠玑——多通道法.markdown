---
layout: post
title: 编程珠玑——多通道法
categories:
- 编程珠玑
tags:
- 编程珠玑
---

编程珠玑开篇中的问题
【整理之后，精确的问题陈述】
输入：

所输入的是一个文件，至多包含n个正整数，每个正整数都要小于n，这里的n为10^7。如果输入时某一个整数出现了两次，就会产生一个致命的错误。这些整数与其他任何数据都不关联。

输出：

以增序形式输出经过排序的整数列表。（这里应该补充一下是文件形式吗？）

约束：

至多（大概）只有1MB的可用主存，但是可用磁盘空间非常充足。运行时间至多只允许几分钟，最适宜的时间大概为10秒钟。

==============================================================

对于多通道排序，作者的描述如下：

因为一共有10000000个整数，而1M中我们使用250000个号码存储，所以需要使用40个通道。

第一个通道中将0到249999之间的任意整数读到内存中，并对这250000个整数进行排序，然后将它们写入输出文件中。

第二个通道对250000到499999之间的整数进行排序，然后也是同样写入输出文件中。
依次类推，直到第40个通道。

第40个通道将排序9750000到9999999之间的整数，然后写入输出文件中。

注意，这里意思是输出文件是同一个文件。

快速排序在主存中相当有效，它只需要20行代码。因此整个程序只需1到2页的代码即可实现，并且该程序还有一个令人满意的特性，即我们不必担心使用中间磁盘文件的问题。

40个通道的算法不使用中间文件，需要多次读取输入文件，但只进行一次输出文件的写入操作。

==============================================================

在开篇中作者的第二个解决方法一开始没有看明白，怎么想都不明白40通道是如何来排序的呢？？

每个通道仅仅能够排列的250000个整数！但是如何做所有数字的排序啊！

现在我知道了答案，原来还是要咬文嚼字才能明白！作者的本意是说

对于40亿个数字，每次只能读取250000，那我就一次读取250000个，但是这250000个不是读取文件中
原来散乱排列的顺序的前250000个，而是将数字0-250000范围内的数字全部读取出来，读一遍将在0-250000之间所有的数字都读取出来。

第二次读取就是从在250001-500000之间的数字都读取出来，所以一共读取40次。

 ==============================================================

简单的说：
* 第一次读取：0<= x <=250000
* 第二次读取：250000< x <=500000
* ……
* 第40次读取：9750000 < x <=999999

==============================================================

然后每次读取后直接用快排将这次读取的数字全部排列好在写入到文件中，所以这样要读取40次，
每次写入一部分所以写了40次，但是40次写入之后才是所有的数字，所以可以看做是写入一次

==============================================================

对于问题5我们可以采用同样的方法：
#### 问题5：

程序员说他有1M的空闲空间，但是我们编写的代码有1.25M，他可以搜集额外的空间。但是假如1M是一个严格的分界线，那我们应该怎么做呢？算法需要的运行时间是多少？？？

=======================================================

之前使用的BitMap的方法可以将1000万个数值需要1000万位，需要放入到1000/8 = 125万个字节中，125万/1000/1000 =1.25M,超过了1M。

=======================================================

我们可以利用多通道法：

将1000万个数分成两部分:[0-5000000-1] [500000-10000000-1];

500万/8 = 625000个字节 = 0.625M空间

在第一通道内读取排序0-5000000-1内的整数

在第二通道内读取排序5000000-10000000-1内的整数

**K通道算法需要读取K次n个数据，每次需要使用n/K的空间大小用来排序**

** K通道算法在kn时间内和n/k空间内排序n个不重复的正整数。**

=======================================================

#### 问题6：
如果某程序员告诉你每个整数至多出现10次，而不是至多出现一次，那应该怎么办呢？？
每个数字出现10次，那么我们应该使用对应的位表示这个下标出现的次数，所以需要4位来存储出现的次数！

这次使用4位来表示每一个数字出现的次数，则两个数字占用一个字节。

10000000个数字需要5000000个字节，5000000/1000/1000 = 5M内存；

5000000/K/1000/1000 = 1M,K = 5

或者使用K通道法将10000000个数字分成五份，每份2000000万数字，每份占用1000000字节 = 1M内存

=======================================================

读取5次

    第一次读取: 0<=X <200万
    第二次读取: 200万<=X <400万
    第三次读取: 400万<=X <600万
    第四次读取: 600万<=X <800万
    第五次读取: 800万<=X <1000万
=======================================================

每次排序后写入文件中即可！
