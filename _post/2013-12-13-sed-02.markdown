---
layout: post
title: sed的替换功能
categories:
- sed
tags:
- sed
---

sed的替换功能

    
    [root@localhost sed]# cat main.c
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    
    long int power(int, int);
    int main(){
            int base, n;
            scanf("%d, %d\n", &base, &n);
            printf("the power is: %d\n", power(base, n));
    
            return 0;
    }
    
    long int power(int base, int n)
    {
            return base^n;
    }
    
    [root@localhost sed]# sed  -e 's/power/jiecheng/g' main.c
    #include 
    #include 
    #include 
    
    long int jiecheng(int, int);
    int main(){
            int base, n;
            scanf("%d, %d\n", &base, &n);
            printf("the jiecheng is: %d\n", jiecheng(base, n));
    
            return 0;
    }
    
    long int jiecheng(int base, int n)
    {
            return base^n;
    }
    
    [root@localhost sed]#


sed命令's/power/jiecheng/g'这条命令全局查找main.c中的power字符，并将其替换位jiecheng

g表示全部替换否则只会替换该行第一次出现的power

================================================================================

**地址范围+替换操作**
    
    #表示替换1-10行中所有的power
    [root@localhost sed]# sed  -e '1,10s/power/jiecheng/g' main.c
    
    #仅仅替换main函数中所有的power
    [root@localhost sed]# sed  -e '/main[[:space:]]*(/,/^}/s/power/jiecheng/g' main.c
    #include 
    #include 
    #include 
    
    long int power(int, int);
    int main(){
            int base, n;
            scanf("%d, %d\n", &base, &n);
            printf("the jiecheng is: %d\n", jiecheng(base, n));
    
            return 0;
    }
    
    long int power(int base, int n)
    {
            return base^n;
    }


/main[[:space:]]*(/,/^}/ #地址范围选择在main函数之内

s/power/jiecheng/g' main.c #在地址范围内进行替换

##### 注意:

如果正在执行字符串替换，并且规则表达式或替换字符中有许多斜杠，则可以在s之后指定一个不同的字符来更改分割符号

    
    [root@localhost sed]# sed -e 's:/usr/loval:/usr:g' list
    [root@localhost sed]# sed -e 's"/usr/loval"/usr"g' list


使用':'或'"'作为分割符，只要你喜欢就可以用任意符号

================================================================================

sed最长匹配问题
    
    [root@localhost sed]# cat ollir.html
    <html>
    <html>
    <html>
    <head> ollir page</head>
    <body> <b>this </b> is <b>ollir's</b> page </body>
    </html>

    
    [root@localhost sed]# sed -e 's/<.*>//g' ollir.html
    
    [root@localhost sed]#


命令sed -e 's/<.*>//g' ollir.html并不是什么都没有输出，而是输出了4个空行

我们想要将html文件中的之类的标签去掉，所以要替换的内容是从<到>为止的内容

但是当sed试图在行中匹配表达式时候，它要在行中查找最长的匹配。这样上面的例子中文件的每一行都从‘<’匹配，一直到行末的'>'结束，所以这些内容被替换成了空

我们期望的替换结果是

    
    ollier page
    this is ollir's page


问题的关键在于如何打破sed的最长匹配机制,最长匹配来自与.*的用法，表示任意字符任意长度

    
    [root@localhost sed]# cat ollir.html
    <html>
    <head> ollir page</head>
    <body> <b>this </b> is <b>ollir's</b> page </body>
    </html>

    
    [root@localhost sed]# sed -e 's/<[^>]*>/ /g' ollir.html ollir page this is ollir's page


/<[^>]*>/表示匹配<后面接任意个非>的字符，当遇到>则与*后的>匹配了，然后将其中的内容替换为空
    
     [root@localhost sed]# sed -e 's:[/*][/*]: :g' main.c
     [root@localhost sed]# sed -e 's/\/\*//g' main.c#转义字符


替换c语言中的各种注释符号/*和*/和//

================================================================================

