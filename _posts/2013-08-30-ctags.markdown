---
author: UCSHELL
comments: true
date: 2013-08-30 13:12:56+00:00
layout: post
slug: ctags%e7%9a%84%e4%bd%bf%e7%94%a8
title: ctags的使用
wordpress_id: 534
categories:
- THE TOOL
tags:
- vim
---

ctags的使用

======================================================================

    #ctags –R *
    # vi –t fun fun为要查找的变量或函数名
    ：ts tags list
    ：tp tags preview
    ：tn tags next
    Ctrl + ]
    Ctrl + T

======================================================================

进入工程目录
    #ctags -R
"-R"表示递归创建，也就包括源代码根目录下的所有子目录下的源程序

======================================================================

	#vim -t fun
打开定义"fun"（变量或函数或其它）的文件，并把光标定位到这一行

======================================================================

最方便的方法是把光标移到变量名或函数名上，然后按下"Ctrl-]"。用"Ctrl-o"退回原来的地方。

注意：运行vim的时候，必须在"tags"文件所在的目录下运行。

======================================================================

	在函数中移动光标
    [{ 转到上一个位于第一列的"{"
    }] 转到下一个位于第一列的"{"
    { 转到上一个空行
    } 转到下一个空行
    gd 转到当前光标所指的局部变量的定义
    * 转到当前光标所指的单词下一次出现的地方
    # 转到当前光标所指的单词上一次出现的地方

======================================================================

"ctags" 是一个独立的程序， 在当前目录下为所有的 C 文件生成标签文件，使用下面的这个命令：

	# ctags *.c

使用下面的命令跳转到一个函数定义的地方：

	:tag fun

这个命令会找到函数 "fun"，即使该函数是在另一个文件中。

======================================================================

	:tags 显示你经过的标签列表：

======================================================================

	:tag 将当前窗口的文件替换为包含新函数的文件。

	:stag fun 与使用 ":split" 命令将窗口分开然后再用 ":tag" 命令等价。

使用下面的命令可以水平分割当前窗口并跳转到光标下的标签:

	CTRL-W ]

======================================================================

	:ptag fun 打开一个预览窗口来显示函数
	:pclose 关闭预览窗口
	:pedit test.h 在预览窗口中编辑一个指定的文件，尤其是编辑头文件时很有用

======================================================================

psearch可用来查找当前文件和任何包含文件中的单词 并在预览窗口中显示匹
配。这在使用没有标签文件的库函数时十分有用。

例如：

	:psearch popen

这会在预览窗口中显示含有 popen() 原型的 "stdio.h" 文件

======================================================================


