---
layout: post
title: Makefile伪目标
categories:
- Makefile
---

** 伪目标一般没有依赖的文件 **。但是，我们也可以为伪目标指定所依赖的文件。

**伪目标同样可以作为“默认目标”，只要将其放在第一个。**

一个示例就是，如果你的Makefile需要一口气生成若干个可执行文件，但你只想简单地敲一个make完事，并且，所有的目标文件都写在一个Makefile中，那么你可以使用“伪目标”这个特性：

    
    all : prog1 prog2 prog3
    .PHONY : all
    
    prog1 : prog1.o utils.o
    	cc -o prog1 prog1.o utils.o
    
    prog2 : prog2.o
    	cc -o prog2 prog2.o
    
    prog3 : prog3.o sort.o utils.o
    	cc -o prog3 prog3.o sort.o utils.o


我们知道，Makefile中的第一个目标会被作为其默认目标。

我们声明了一个“all”的伪目标，其依赖于其它三个目标。

由于默认目标的特性是，**总是被执行的，但由于“all”又是一个伪目标，伪目标只是一个标签不会生成文件，所以不会有“all”文件产生。**

于是，其它三个目标的规则总是会被决议。

也就达到了我们一口气生成多个目标的目的。

“.PHONY : all”声明了“all”这个目标为“伪目标”。

"all" 是一个伪目标，执行 make 不会生成 ”all" 文件，而执行后面的多个目标。

随便提一句，从上面的例子我们可以看出，**目标也可以成为依赖。所以，伪目标同样也可成为依赖。**

看下面的例子：

    
    .PHONY : cleanall cleanobj cleandiff
    
    cleanall : cleanobj cleandiff
    rm program
    
    cleanobj :
    rm *.o
    
    cleandiff :
    rm *.diff


“make cleanall”将清除所有要被清除的文件。

“cleanobj”和“cleandiff”这两个伪目标有点像“子程序”的意思。

我们可以输入“make cleanall”和“make cleanobj”和“make cleandiff”命令来达到清除不同种类文件的目的。

