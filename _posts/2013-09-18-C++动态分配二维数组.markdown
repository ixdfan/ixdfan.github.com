---
author: UCSHELL
comments: true
date: 2013-09-18 05:34:03+00:00
layout: post
slug: c%e5%8a%a8%e6%80%81%e5%88%86%e9%85%8d%e4%ba%8c%e7%bb%b4%e6%95%b0%e7%bb%84
title: C++动态分配二维数组
wordpress_id: 643
categories:
- THE C&amp;C++
tags:
- 二维数组
---

之前看过网上关于C++分配二维数组的帖子，但是都没有耐心看下去，感觉写的很乱，很难懂.所以也就没有看上网看自己之前的笔记，突然发现原来笔记中写过关于二维数组的分配，只是当时还不知道那就是传说中的动态分配二维数组。

其实很简单的

    
    #include <string>
    #include <iostream>
    #include <cstdio>
    using namespace std;
    
    int main()
    {
            int* a[4] = {new int[4], new int[4], new int [4], new int[4]};
            for(int i = 0; i < 4; i++)
                    for(int j = 0; j < 4; j++)
                            a[i][j] = j;
    
            for(int i = 0; i < 4; i++)
            {
                    for(int j = 0; j < 4; j++)
                    {
                            printf("a[%d][%d] = %x ", i, j, &a[i][j]);
                    }
                    cout << endl;
            }
    	for(int i = 0; i < 4; i++)
    		delete[] a[i];
            return 0;
    }




    
    
    a[0][0] = 96cd008 a[0][1] = 96cd00c a[0][2] = 96cd010 a[0][3] = 96cd014
    a[1][0] = 96cd020 a[1][1] = 96cd024 a[1][2] = 96cd028 a[1][3] = 96cd02c
    a[2][0] = 96cd038 a[2][1] = 96cd03c a[2][2] = 96cd040 a[2][3] = 96cd044
    a[3][0] = 96cd050 a[3][1] = 96cd054 a[3][2] = 96cd058 a[3][3] = 96cd05c
    


看到地址好像是不连续的！

也可以将分配的时候使用一个for循环来分配

这不就是传说中的C++动态分配二维数组嘛！！不过说白了还是对指针的理解.

int* a[4]的含义是a是一个数组，这个数组含有4个元素，每个元素的类型是int*，一维数组的地址的类型也是int*

所以每个元素指向的是一个一维数组。就这么简单！



