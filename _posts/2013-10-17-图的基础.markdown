---
author: UCSHELL
comments: true
date: 2013-10-17 11:52:15+00:00
layout: post
slug: '%e5%9b%be%e7%9a%84%e5%9f%ba%e7%a1%80'
title: 图的基础
wordpress_id: 868
categories:
- THE ALGORITHM
---

=================================================================

一个图G = <V, E>两个集合来定义的；
**V**代表的是顶点的集合；

**E**代表的是两顶点之间的边；

=================================================================

**邻接**:如果每对顶点之间都没有顺序，比如(u, v)等同于(v, u)，那么就说顶点u和顶点为相互邻接，他们通过**无向边**(u, v)相链接；将端点u和顶点v称为边(u, v)的端点，称u、v和该边相关联，当然边(u, v)也和端点u和v相关联。

=================================================================

如果顶点对于(u, v)不等同于顶点对(v, u)，那么就说(u, v)的方向是从顶点u到顶点v。

其中u称为尾，v称为头。也可以说是边(u, v)离开了u进入了v。

#### 注意：

**v称为头，u称为尾

=================================================================

图(a)中包含了6个顶点与7条边

[![无向图](http://ucshell.com/wp-content/uploads/2013/10/无向图.png)](http://ucshell.com/wp-content/uploads/2013/10/无向图.png)[![有向图](http://ucshell.com/wp-content/uploads/2013/10/有向图-300x150.png)](http://ucshell.com/wp-content/uploads/2013/10/有向图.png)









图a                                                                                              图b

    V = {a, b, c, d, e, f};
    E = {(a, c), (a, d), (b, c), (b, f), (c, e), (d, e), (e, f)};

对于|V|个顶点的无圈无向图，它可能含有的边的数量|E|可以表示为：

0 <= |E| <= |V|(|V| - 1)/2;

如果每个顶点|V|和其他所有|V|-1个顶点之间都有边相连，图中的数量就会达到最大。

但是要对|V|(|v| - 1)/2，因为每条边都被包含了两次

=================================================================

* 完全图：任意两个顶点之间都有边相连的称为完全图
* 无向图：如果图中所有的边都是无向的，那么就图就是无向图
* 有向图：如果图中所有的边都是有向的，那么图本身就是有向的

=================================================================

如果完全图具有|V|个顶点，它的标准符号是K|V|.

如果图中所缺的边数量相对较少，我们称它为稠密图

如果图中的边相对顶点来说数量较少，我们称它为稀疏图

=================================================================

图的两种表示方法：邻接矩阵和邻接链表

n个顶点的邻接矩阵是一个n*n的布尔矩阵，

如果第i个矩阵到第j个顶点之间有链接边，则将矩阵中第i行第j列元素置为1。

如果没有这条边则置为0。

#### 注意：

一个无向图的邻接矩阵总是对称的，也就是说当i>=0，j<=n-1时，A[i, j] = A[j, i]

=================================================================

图的邻接链表：

每一个顶点用一个邻接链表表示，该链表包含了和这个顶点想邻接的所有顶点。
通常由表头开始，表头指出了该链表表示的是哪一个顶点，如图所示为图b的邻接链表和b的邻接矩阵，也可以说邻接链表指出了邻接矩阵中值为1的列

[![a](http://ucshell.com/wp-content/uploads/2013/10/a-300x277.png)](http://ucshell.com/wp-content/uploads/2013/10/a.png)[![b](http://ucshell.com/wp-content/uploads/2013/10/b-300x231.png)](http://ucshell.com/wp-content/uploads/2013/10/b.png)

#### 注意：**

如果图是稀疏的，尽管链表中的指针会占用额外的存储器，但是相对于相应的邻接矩阵来说，邻接链表占用空间还是比较少的。如果是稠密图，则情况刚好相反。

一般来说采用哪种表示法一般取决于问题的性质


