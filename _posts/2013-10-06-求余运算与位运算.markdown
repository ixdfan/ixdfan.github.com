---
layout: post
title: 求余运算与位运算
wordpress_id: 793
categories:
- ALGORITHM
---

**注意：这种方法只是适合于求一个数除以二的N次幂才正确**

首先从求余数谈起，我们知道，计算机中存储的方式是0和1序列：

    1 0001=====>2^0
    2 0010=====>2^1
    3 0011=====>2^1 + 1
    4 0100=====>2^2
    
把这些数字序列左移一位的时候，相当与数字扩大为原来的2倍，右移一位就是缩小为原来的1/2。
那么余数在哪里？

**被移掉的那些位便是余数。**

==================================================================

举例:

    9 的二进制就是1001
    8 的二进制就是1000

显然余数是1，按照公式这么做：

把8的二进制1000换为8-1也就是7，7的二进制表示为：0111

1001&0111 = 0001

答案为1

==================================================================

**注意：这种方法只是适合于求一个数除以二的N次冥才正确。**

原理：

由于除数是2^N （N为0起始递增的整数），所以隐藏条件就是，除数的二进制只能是如下
0001，0010，0100，1000……

**当我们求余的时候，相当于除以2的N次冥，也就是相当于把数本身右移N位，右移位数告诉我们被除数将被移走几位，但是移走的那些余数也就找不回来了**。

把上面的数字减一就发现：

0000，0001，0011，0111，01111，011111，0111111……

当和1做位运算时候，得到的结果是那个数的本身。

所以与**(2^n - 1)做&位运算就可以保存住即将移除的那几位**！这样我们就知道了它的余数
