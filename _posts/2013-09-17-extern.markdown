---
author: UCSHELL
comments: true
date: 2013-09-17 08:32:07+00:00
layout: post
slug: extern%e4%b8%8d%e4%b8%ba%e4%ba%ba%e7%9f%a5%e7%9a%84%e5%b0%8f%e7%bb%86%e8%8a%82
title: extern不为人知的小细节
wordpress_id: 627
categories:
- THE C/C++
tags:
- extern
---

**变量定义用于为变量分配存储空间**

声明用于向程序表明变量的类型和名字，定义也是声明，在定义变量时声明了他的类型和名字。

使用extern关键字声明变量名而不定义它（除非为它赋值）

不定义变量的声明包括 对象名，对象类型和对象类型前的extern

extern int i; //仅仅声明，不会定义

int i; //声明与定义

**extern的声明不是定义，也不会分配存储空间**

**它仅仅是表明变量定义在程序的其他位置**，程序中变量可以声明多次，但是定义仅仅一次，只有当声明也是定义的时候，声明才可以初始化，因为只有定义才分配空间。初始化必须要有存储空间来初始化。

**如果extern的声明有来初始化，那么它也是定义，即使有extern关键字**

**只有extern声明位于函数外部的时候才可以初始化**。

-------------------------------------------------

	extern double pi = 3.14;

虽然使用了extern但是这条语句还是定义了pi，分配并初始化了存储空间。
因为已经定义了pi所以之后如果在定义那就是错误的

================================================
**const对象默认为文件的局部变量**

**非const变量默认为extern**

在全局作用域里定义非const变量时候，它在整个程序都可以访问。

    //file_1.cpp
    int counter;
    //file_2.cpp
    extern int counter;//声明变量
    ++counter;
=================================================

除非特别说明，在全局作用域声明的const变量是定义该对象的文件的局部变量。
就是只能在本文件中使用，不能被其他文件访问。

**要使const变量能够在其他的文件中访问，必须显式的指定它为extern**

通过指定const变量位extern，就可以在整个程序中访问const对象

    //file_1.cpp
    extern const int counter = 8;
    //file_2.cpp
    extern const int counter;//声明变量
    for(int index = 0; index != counter; ++index)
    
=================================================
