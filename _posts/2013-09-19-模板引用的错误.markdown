---
layout: post
title: 模板引用的错误
categories:
- C\C++
tags:
- 模板
---

	#include <iostream>
    #include <string>
    using namespace std;
    template <typename T, typename U>
    struct Pair
    {
            T first;
            U second;
            Pair():first(), second(){}
            Pair(const T& a, const U& b):first(a), second(b){}
    };
    template <typename T, typename U>
    ostream& operator<<(ostream& o, const Pair<T, U>& p)
    {
            return o << p.first << ':' << p.second;
    }
    
    template <typename T, typename U>
    Pair<T, U> mp(const T& f, const U& s)
    {
            return Pair<T, U>(f, s);
    }
    int main()
    {
            cout << Pair("pangxie009", 19) << endl;
            cout << mp("pangxie009", 19) << endl;
            return 0;
    }



    
    [root@localhost C++]# cc test.cc -omain
    test.cc: In constructor ‘Pair<T, U>::Pair(const T&, const U&) [with T = char [11], U = int]’:
    test.cc:21:   instantiated from ‘Pair<T, U> mp(const T&, const U&) [with T = char [11], U = int]’
    test.cc:26:   instantiated from here
    test.cc:10: 错误：数组被用作初始值设定


到现在我还没有明白到底为什么错误，将mp模板的引用去掉就没有错误了，为什么？
留着以后找答案吧

=============================================================================

经过水木论坛的洗礼，我终于知道了答案，果然是万能的水木啊！！赞叹一下！
其实这个的问题就是在文章[《C++模板之参数推导规则》](http://ucshell.com/archives/702)中提到的第五条规则


>  **引用类型模板形参不能将将数组或函数类型的实参转换成数组指针或函数指针,参数推导将出错**


在函数模板mp中形参的类型是引用类型，所以对于"pangxie009"这个常量数组它无法将其转换为指针来使用，而是将它推导成了char [11]类型。
此时Pair的类型便成为了

    
    Pair
    {
    	char first[11];
    	int second;
    	Pair(const char& a[11], int& b):first(a),second(b)
    }


这相当于是对数组直接赋值
比如

    
    char a[11] = "pangxie009";
    char b[11] = a;


所以导致错误

可以验证一下，直接将Pair中构造函数改为
Pair(const T& a, const U& b): second(b){}

OK，没有错误了！！
