---
author: UCSHELL
comments: true
date: 2013-09-11 01:50:45+00:00
layout: post
slug: fcntl%e5%87%bd%e6%95%b0%e4%bd%bf%e7%94%a8
title: fcntl函数使用
wordpress_id: 565
categories:
- LINUX
tags:
- fcntl
---

fcntl函数函数原型如下

	int fcntl(int fd, int cmd, ... /* arg */ );
fcntl函数的选项                 类似于ioctl中的功能


==========================================================
    
    F_DUPFD					复制文件描述符
    F_SETOWN, flags			设置套接字属主				FIOSETOWN
    F_GETOWN, 0				获取套接字属主				FIOGETOWN
    F_SETFL, O_ASYNC	       设置套接字为信号驱动IO	    FIOASYNC
    F_SETFL, O_NONBLOCK		设置套接字为非阻塞IO		  FIONBIO
    F_GETLK					获取记录锁
    F_SETLK					设置记录锁
    F_SETLKW				   与F_SETLK类似，不过如果已经被加锁。他会阻塞等待直到解锁后在进行加缩

===========================================================

O_GETFL获取的属性如下:

    O_RDONLY
    O_WRONLY
    O_RDWR          **注意：以上三个只能与O_ACCMODE存放获取位不可直接获取**
    
    O_APPEND
    O_NONBLOCK
    O_SYSNC
    O_ASYNC

**注意：对于O_RDONLY,O_WRONLY,O_RDWD只能与O_ACCMODE存放获取位，**

** 不可以直接与选项进行&获取**

==========================================================

F_GETOWN:获得接收信号SIGIO或SIGUSR信号的进程ID或进程组ID


F_SETOWN:设置接受信号SIGIO或SIGUSR信号的进程ID或进程组ID,
参数arg位正时设置接受信号的进程ID,arg为负值时设置接受信号的进程组ID位arg的绝对值

F\_SETOWN与F\_GETOWN用来设置信号的属主，因为信号SIGIO与SIGURG这两个
信号需要使用命令F_SETOWN设定进程主才能生成。

==========================================================

实例：F_GETFL

    
     
    #include 
    #include 
    #include 
    
    int main()
    {
      int flags = -1;
      int accmode = -1;
    
      flags = fcntl(0, F_GETFL, 0);
    
      accmode = flags & O_ACCMODE;//获取访问模式z只能使用O_ACCMODE获取
      if(O_RDONLY == accmode)
        printf("STDIN readonly\n");
      if(O_WRONLY == accmode)
        printf("STDIN writeonly\n");
      if(O_RDWR == accmode)
        printf("STDIN read and write\n");
    
      if(flags & O_APPEND)
        printf("STDIN append\n");
      if(flags & O_NONBLOCK)
        printf("STDIN NONBLOCK\n");
    
      return 0;
    }


===========================================================

实例：使用fcntl函数修改套接字的非阻塞属性

    
    int main()
    {
      int uid;
      int fd = open("case.txt", O_RDWR);
      uid = fcntl(fd, F_GETOWN);	//获得接受信号的进程ID
      printf("SIG recv ID : %d\n", uid);
      close(fd);
      return 0;
    }


==========================================================

F_SETOWN实例:

    
      
    int main()
    {
      int uid;
      itt fd = open("test.txt", O_RDWR);
      uid = fcntl(fd, F_SETOWN, getpid());//将信号发送给本进程
      return 0;
    }


=====================================================

F_DUPFD实例:

    
     
    int main()
    {
      int fd = open("test", O_RDONLY);
      int newfd = fcntl(fd, F_DUPFD, 0);
      return 0;
    }


=====================================================
