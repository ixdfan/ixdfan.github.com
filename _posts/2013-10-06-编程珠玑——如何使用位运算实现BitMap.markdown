---
layout: post
title: 编程珠玑——如何使用位运算实现BitMap
categories:
- 编程珠玑
tags:
- 编程珠玑
---

1.6问题2：
如何使用位运算（如与、或、移位）实现BitMap？？
==================================================================

    
     // 表示一个int型含有32个位
    #define BITSPERWORD 32
    
    // 单次位移量，右移5相当于除以32
    #define SHIFT 5	
    
    #define MASK 0x1F		//求余使用
    
    #define N 10000000	// 表示有1000万个数
    
    int a[1 + N/BITSPERWORD]; // 1000万个位需要多少个数组元素，每个元素32位
    
     //第i位位于第i/32个元素内
    //设置位数组中的从0开始的第i位为1
    // void set(int i) { a[i / 32] |= (1<<(i % 32)); } 
    
    //设置位数组中的从0开始的第i位为0
    // void clr(int i) { a[i / 32] &= ~(1<<(i % 32)); }
    
    //取出从0开始的第i位的值，用于检测
    // int test(int i) { return a[i / 32] & (1<<(i % 32)); } 
    
    void set(int i) { a[i>>SHIFT] |= (1<<(i & MASK) ); } 
    void clr(int i) { a[i>>SHIFT] &= ~(1<<(i & MASK) ); } 
    int test(int i) { return a[i>>SHIFT] & (1<<(i & MASK) ); }
    
    int main()
    {
    	int i;
    	for (i = 0; i < N; i++)
    		clr(i);
    	while (scanf("%d", &i) != EOF)
    		set(i);
    	for (i = 0; i < N; i++)
    	{
    		if (test(i))
    		printf("%d\n", i);
    	}
    
    	return 0;
    
    }


1<<(i % 32)与1<<(i & MASK) 等价，可以参考文章《[求余运算与位运算](http://ucshell.com/archives/793)》

==================================================================
