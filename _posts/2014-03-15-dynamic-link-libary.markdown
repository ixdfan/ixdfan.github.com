---
layout: post
title: 静态连接与动态连接的区别
description: 
modified: 
categories: 
- THE LINUX
---

#### 静态连接于动态连接的区别

##### 静态连接:
静态连接是指把要调用的函数或者过程直接连接到可执行文件中，成为可执行文件的一部分；

也就是说动态库函数的代码就在程序exe文件中，该文件包含了运行时所需要的全部代码。

##### 静态连接的缺点:
当多个程序都调用相同函数时，内存中就会存在这个函数的多个拷贝，这样就浪费了内存资源。

##### 动态连接:
动态连接时相对于静态连接而言，动态连接所调用的函数代码并没有被拷贝到应用程序的可执行文件中去，而是仅仅在其中加入了所调用函数的描述信息(往往是一些重定位信息)。

仅当应用程序被装入内存开始运行时，在操作系统的管理下，才在应用程序与相应的动态链接库(dynamic link libary，dll或so)之间建立连接关系。

当要执行所调用的dll中的函数时，根据连接产生的重定位信息，操作系统采取执行dll中相应的函数代码。

静态连接的执行程序能够在其他同类操作系统机器上直接运行，例如一个elf文件是在linux上静态连接的，那么僵该文件直接拷贝到另一台linux的机器上是可以运行的。

动态连接的执行程序与静态连接执行程序不同，除非将可执行文件所需的动态库都一并拷贝过去，或者对方机器上也有个相同版本的动态库文件，否则不能保证正常运行；


#### 静态链接库与动态链接库有什么区别

静态链接库就是使用的.lib或者.a文件，库中的代码最后需要连接到可执行文件中去，所以静态连接的可执行文件一般比较大一些；

动态链接库是一个包含可由多个程序同时使用的代码和数据的库，它包含函数和数据的模块的集合。程序文件在运行时加载这些模块(也就是所需的模块映射到调用进程的地址空间)。

静态链接库于动态链接库的相同点是他们都实现了代码的共享;

不同点是静态链接库中代码被包含在了调用的执行文件中，该lib中不能再包含其他动态链接库或者静态链接库了。

动态链接库dll可以被调用的exe动态的引用和卸载，该dll中还可以包含其他动态链接库或者静态链接库