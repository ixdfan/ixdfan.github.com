---
author: UCSHELL
comments: true
date: 2013-09-12 01:40:37+00:00
layout: post
slug: '%e5%a4%a7%e5%b0%8f%e7%ab%af%e7%9a%84%e8%af%a6%e7%bb%86%e8%a7%a3%e9%87%8a'
title: 大小端的详细解释
wordpress_id: 574
categories:
- THE C/C++
---

小端字节序(Little Endian,LE)：表示在变量的内存地址的**起始地址存放在低字节**，按照高字节顺序存放

大端字节序(Big Endian,BE)： 表示在变量的内存地址的**起始地址存放在高字节**，按照低字节顺序存放

例如：0xabcd在大端字节序与小端字节序中的存储

==================================

小端字节序：
    0                   7 8                   15
    ---------------------------------------
    | 低地址字节 | 高地址字节 |
    ---------------------------------------
    
    0        3 4      7 8       11      15
    ----------------------------------------
    |   d     |    c    |     b   |    a     |
    ----------------------------------------

==================================

大端字节序：

    0                   7 8                   15
    ---------------------------------------
    | 高地址字节 | 低地址字节 |
    ---------------------------------------
    
    0        3 4      7 8       11      15
    ----------------------------------------
    |   a     |    b   |     c   |    d     |
    ----------------------------------------

===================================

判断大小端的例子

    
    #include <stdio.h>
    int main()
    {
        int c = 0x12345678;
        int d = *(char*)&c;
        if(d == 0x78)
        	printf("LE\n");
        else
        	printf("BE");
        
        return 0;
    }
