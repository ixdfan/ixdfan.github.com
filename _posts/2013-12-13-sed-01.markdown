---
author: UCSHELL
comments: true
date: 2013-12-13 09:14:57+00:00
layout: post
slug: sed%e7%bb%84%e5%90%88%e5%91%bd%e4%bb%a4
title: sed组合命令
wordpress_id: 1223
categories:
- sed
tags:
- sed
---

最简单的组合命令是使用分号分隔命令

    
    [root@localhost sed]# sed -n -e '=;p' passwd.bak
    1
    root:x:0:0:root:/root:/bin/bash
    2
    bin:x:1:1:bin:/bin:/sbin/nologin
    3
    daemon:x:2:2:daemon:/sbin:/sbin/nologin
    4
    adm:x:3:4:adm:/var/adm:/sbin/nologin
    5
    lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
    6
    sync:x:5:0:sync:/sbin:/bin/sync
    7
    shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
    8
    halt:x:7:0:halt:/sbin:/sbin/halt
    9
    mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
    10
    uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
    [root@localhost sed]#


这个命令分成两部分，一部分是等号(=)，一部分是p命令，这两部分使用分号(;)来隔开，**=命令告诉sed要打印行号**，**p命令表示打印该行**因为我们使用了-n命令

当我们指定多条命令时候，sed会按照顺序将命令应用到文件的每一行，例如set先将=应用与第一行在执行p命令重复这个过程。

另外还可是使用多个-e参数

    
    [root@localhost sed]# sed -n -e '=' -e 'p' passwd.bak


使用文本文件执行sed命令

    
    [root@localhost sed]# cat handle.sed
    1d
    s:sbin/nologin:bin/bash:g
    p
    
    [root@localhost sed]# sed -n -f handle.sed passwd.bak
    bin:x:1:1:bin:/bin:/bin/bash
    daemon:x:2:2:daemon:/sbin:/bin/bash
    adm:x:3:4:adm:/var/adm:/bin/bash
    lp:x:4:7:lp:/var/spool/lpd:/bin/bash
    sync:x:5:0:sync:/sbin:/bin/sync
    shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
    halt:x:7:0:halt:/sbin:/sbin/halt
    mail:x:8:12:mail:/var/spool/mail:/bin/bash
    uucp:x:10:14:uucp:/var/spool/uucp:/bin/bash
    [root@localhost sed]#


我们将要做的操作写入handle.sed文件中，然后使用-f加载这个文件

    
    1d				表示删除第一行
    s:sbin/nologin:bin/bash:g	表示替换
    p				表示打印


**多条命令用于同一地址范围**

    
    [root@localhost sed]# sed -n -e '1,5{s:sbin/nologin:bin/bash:g; s/:/->/g; p}' passwd.ba
    k
    root->x->0->0->root->/root->/bin/bash
    bin->x->1->1->bin->/bin->/bin/bash
    daemon->x->2->2->daemon->/sbin->/bin/bash
    adm->x->3->4->adm->/var/adm->/bin/bash
    lp->x->4->7->lp->/var/spool/lpd->/bin/bash
    [root@localhost sed]#


这个命令将{}之间的命令应用从第一行开始，到第五行结束的所有行，可以在{}之内输入任意多的命令，使用分号分隔


================================================================================

实例:

在Unix与Windows系统纯文本格式的换行方式是不同的，Windows的文本文件在每一行末尾有个CR(回车)+LF(换行)
而Unix文本只有一个换行，因此必须进行格式转换

    
    [root@localhost sed]# sed -e 's/$/\r/' unix_file.txt > windows_file.txt
    #直接在末尾添加换行符号

将windos格式文本转换为UNIX格式
    
    [root@localhost sed]# sed -e 's/.$//' windows_file.txt > unix_file.txt
    #将末尾的那个字符消去

================================================================================================
    
    ot@localhost sed]# cat datafile
    Steve Blenheim:238-923-7366:95 Latham Lane, Easton, PA 83755:11/12/56:20300
    Betty Boop:245-836-8357:636 Cutesy Lane, Hollywood, CA 91464:6/6/23/23:14500
    Igor Chensky:385-375-8395:3567
    Norma Corder:397-875-2735:74
    Jennifer Cowan:548-83402348:583
    Jon DeLoach:408-253-3122:123
    Karen Evich:284-758-2857:23 Edgecliff Place, Lincoln, NB 92087:7/25/53:85100
    Karen Evich:284-758-2867:23 Edgecliff Place, Lincoln, NB 92743:11/3/53:58200
    Karen Evich:284-758-2867:23 Edgecliff Place, Lincoln, NB 92087:11/3/53:58200
    
    Fred Fardbarkle: 674-843-1385:20 Parak Lane, Deluth, MN 23850:4/12/23:780900
    Fred Fardbarkle: 674-843-1385:20 Parak Lane, Deluth, MN 23850:4/12/23:780900
    Lori Gortz:327-832-5782:3465 Mirlo Street, Peabodym MA 34756:10/2/65:35200
    Paco Gutierrez:835-365-1284:454 Easy Street, Decatyrm IL 75732:2/28/53:35200
    Ephram Hardy:293-259-5395:235 CarltonLane, Jolier, IL 73858:8/12/20:56700
    James Ikeda:834-938-8376:832 Ponce Drive, Gary, IN 83756:12/1/46:268500
    Popeye Sailor:156-454-3322:945 Bluto Street, Anywhere, YSA 29358:3/19/35:22350
    Jose Santiago:385-898-8357:38 Fife Way, Abilene, TX 39673:1/5/58:95600
    
    [root@localhost sed]#

任务：
	1删除前3行
	2删除包含Lane的行
	3显示所有生日在November-December之间的行
	4将3个星号(***)添加到Fred开头
	5用JOSE HAS RETIRED取代包含Jose的行
	6将Popeye的生日改为11/14/46
	7删除所有空白行

	8写一个脚本实现：
	在第一行之前插入标题PERSONNEL FILE；
	删除以500结尾的工资
	显示文件内容，将姓和名颠倒
	在文件末尾添加THE END

================================================================================================

1删除前3行

sed -e '1,3d' datafile

2删除包含Lane的行

sed -e 'Lane/d' datafile

3显示所有生日在November-December之间的行

    
    sed -n -e '/[:::]1[12][:/:]/p' datafile
    
    sed -n -e '/\:1[12]\//p' datafile


11与12开头都有一个1，之后是1或2

##### 注意：

sed中为了匹配特殊字符需要将它用[::]包围起来，所以为了匹配':'就必须用[:::],为了匹配’/‘就必须用[:/:],当然也可以使用转义字符'\'

4将3个星号(***)添加到Fred开头
    
    sed -e 's/^Fred/***Fred/g' datafile

5用JOSE HAS RETIRED取代包含Jose的行
    
    sed -e 's/^Jose.*/JOSE HAS RETIRED/g' datafile

6将Popeye的生日改为11/14/46

首先要找到Popeye的生日，也就是要找到Popeye所在的行
然后在替换他的生日
    
    #使用转义字符识别'/'
    [root@localhost sed]# sed -e '/Popeye/s/:[0-9]*\/.*\/.*:/:11\/14\/46:/g' datafile
    #使用[::]识别'/'
    [root@localhost sed]# sed -e '/Popeye/s/:[0-9]*[:/:].*[:/:].*:/:11\/14\/46:/g' datafile

7删除所有空白行
    
    [root@localhost sed]# sed -e '/^$/d' datafile

8写一个脚本实现：
在第一行之前插入标题PERSONNEL FILE；
删除以500结尾的工资
显示文件内容，将姓和名颠倒
    
    [root@localhost sed]# cat do.sed
    /500$/d
    s/^\([a-zA-Z]\+\) \([a-zA-Z]\+\)\(.*\)/\2 \1\3/g
    1iPERSONNEL FILE #注释1
    
    $aTHE END #注释2
    [root@localhost sed]#

第二个其实转义字符占了大部分内容(\,+(,)都要转义)，真正的意义是
	
	s/^([a-zA-Z]+) ([a-zA-Z]+)(.*/\2 \1\3\g

其中匹配的内容被分成了3部分
	([a-zA-Z]+) 表示匹配一串英文字母,也就是明
	([a-zA-Z]+) 表示匹配一串英文字母,也就是姓
	(.*) 剩余的部分
	\+表示开启+的特殊含义而不是去匹配+
	使用\(\)之后可以使用/数字来引用

注释1:插入命令是i,1i代表在第一行插入
注释2:追加命名是a,$a代表是在末尾追加
